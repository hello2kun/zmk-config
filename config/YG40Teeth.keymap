/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
pin matrix changed
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT_LAYER  0
#define LAYER1 1
#define LAYER2 2

/ {
      behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

 behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <160>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp Q>, <&kp N1>, <&kp EXCL>;
            };
       };

behaviors {
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp W>, <&kp N2>, <&kp AT>;
            };
       };

behaviors {
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp E>, <&kp N3>, <&kp HASH>;
            };
       };

behaviors {
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp R>, <&kp N4>, <&kp DLLR>;
            };
       };

behaviors {
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp T>, <&kp N5>, <&kp PRCNT>;
            };
       };

behaviors {
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp Y>, <&kp N6>, <&kp CARET>;
            };
       };

behaviors {
        td6: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp U>, <&kp N7>, <&kp AMPS>;
            };
       };

behaviors {
        td7: tap_dance_7 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp I>, <&kp N8>, <&kp STAR>;
            };
       };

behaviors {
        td8: tap_dance_8 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp O>, <&kp N9>, <&kp LPAR>;
            };
       };

behaviors {
        td9: tap_dance_9 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp P>, <&kp N0>, <&kp RPAR>;
            };
       };

behaviors {
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp LBKT>, <&kp MINUS>, <&kp UNDER>;
            };
       };
behaviors {
        td11: tap_dance_11 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <210>;
            bindings = <&kp RBKT>, <&kp EQUAL>, <&kp PLUS>;
            };
       };

combos
{
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <0 13>;
            bindings = <&kp TAB>;
            };

         combo_tilde {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp TILDE>;
            };
};

macros 
{
      mcr1: mcr1
      {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp H &kp E &kp L &kp L &kp O &kp N2 &kp K &kp U &kp N>;
      };

      mcr2: mcr2 
      {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp B &kp A &kp B &kp O &kp N0 &kp N9 &kp N7 &kp N9>
                     , <&macro_press &kp LSHFT>
                     , <&macro_tap &kp N1 &kp N2>
                     , <&macro_release &kp LSHFT>;
      };

      mcr3: mcr3
      {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp N1 &kp Q &kp N2 &kp W &kp N3 &kp E &kp N4 &kp R>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp N1 &kp N2>
                , <&macro_release &kp LSHFT>;
      };

      mcr4: mcr4
      {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>,
                <&macro_tap &kp N2>,
                <&macro_release &kp LSHFT>,

                <&macro_tap &kp LBKT>,

                <&macro_press &kp LSHFT>,
                <&macro_tap &kp T &kp A &kp SEMI>,
                <&macro_release &kp LSHFT>,

                <&macro_tap &kp RALT &kp Q &kp K &kp R &kp D &kp L &kp R &kp M &kp S &kp RBKT &kp SPACE>;
      };
};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
//C0             C1            C2         C3              C4               C5              C6                C7         C8               C9               C10        C11         C12        
&gresc           &td0          &td1       &td2            &td3             &td4            &td5              &td6       &td7             &td8             &td9       &td10       &td11 
&kp BSPC         &kp A         &kp S      &kp D           &kp F            &kp G           &kp H             &kp J      &kp K            &kp L            &kp SEMI   &kp APOS    &kp RET
&kp LSHFT        &kp Z         &kp X      &kp C           &kp V            &kp B           &kp N             &kp M      &kp COMMA        &kp DOT          &kp FSLH   &kp UP      &kp RSHFT
&kp LCTRL        &kp LGUI      &kp LALT   &lt LAYER2 RET  &bhm LCTRL MINUS &bhm LALT PLUS  &lt LAYER1 STAR   &kp DEL    &lt LAYER2 RALT  &lt LAYER1 RALT  &kp LEFT   &kp DOWN    &kp RIGHT
&lt LAYER1 SPACE &ht LSHIFT SPACE &kp BSPC
            >;
        };

        layer1 {
            bindings = <
//C0        C1        C2        C3        C4        C5        C6        C7        C8         C9        C10        C11          C12      
&kp TAB     &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8     &kp N9    &kp N0     &kp MINUS    &kp EQUAL 
&kp DEL     &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT &kp CARET &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR   &kp UNDER    &kp PLUS
&trans      &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans     &trans    &trans     &kp PG_UP    &trans
&kp RET     &trans    &trans    &trans    &mo 3     &trans    &trans    &kp INS   &trans     &trans    &kp HOME   &kp PG_DN    &kp END
&trans      &trans    &kp DEL
            >;
        };

        layer2 {
            bindings = <
//C0      C1           C2           C3           C4           C5           C6        C7        C8         C9         C10         C11          C12     
&kp GRAVE &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6    &kp F7    &kp F8     &kp F9     &kp F10     &kp F11      &kp F12
&kp CAPS  &mcr1        &mcr2        &mcr3        &mcr4        &trans       &trans    &trans    &trans     &trans     &trans      &trans       &kp PSCRN 
&trans    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans    &trans    &bt BT_PRV &bt BT_NXT &bt BT_CLR  &kp C_VOL_UP &kp C_PP 
&trans    &trans       &trans       &trans       &trans       &trans       &trans    &trans    &trans     &kp LANG2  &kp C_PREV  &kp C_VOL_DN &kp C_NEXT
&trans    &trans       &trans
            >;
        };
    }; 
}; 
